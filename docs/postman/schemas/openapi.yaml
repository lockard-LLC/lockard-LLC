openapi: 3.0.3
info:
  title: Lockard LLC API
  description: |
    API for Lockard LLC services and applications.

    This API provides endpoints for managing business operations,
    partner integrations, and public-facing services.
  version: 1.0.0
  contact:
    name: Lockard LLC API Support
    email: support@lockard-llc.com
    url: https://lockard-llc.github.io/docs
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://lockard-llc.github.io/api/v1
    description: Production server
  - url: https://staging.lockard-llc.github.io/api/v1
    description: Staging server
  - url: http://localhost:5000/api/v1
    description: Local development server

tags:
  - name: Health
    description: Health check and status endpoints
  - name: Authentication
    description: User authentication and authorization
  - name: Users
    description: User management operations
  - name: Partners
    description: Partner management and onboarding

paths:
  /health:
    get:
      summary: Health Check
      description: Returns the health status of the API
      operationId: getHealth
      tags:
        - Health
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "ok"
                timestamp: "2025-10-31T00:00:00Z"
                version: "1.0.0"

  /auth/login:
    post:
      summary: User Login
      description: Authenticate a user and return an access token
      operationId: login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      summary: List Users
      description: Get a paginated list of users
      operationId: listUsers
      tags:
        - Users
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token authentication

  parameters:
    PageParam:
      name: page
      in: query
      description: Page number for pagination
      required: false
      schema:
        type: integer
        default: 1
        minimum: 1

    LimitParam:
      name: limit
      in: query
      description: Number of items per page
      required: false
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 100

  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          enum: [ok, degraded, error]
          example: ok
        timestamp:
          type: string
          format: date-time
          example: "2025-10-31T00:00:00Z"
        version:
          type: string
          example: "1.0.0"
        services:
          type: object
          additionalProperties:
            type: string

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          minLength: 8
          example: "SecurePass123!"

    AuthResponse:
      type: object
      required:
        - token
        - user
      properties:
        token:
          type: string
          description: JWT access token
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refreshToken:
          type: string
          description: Refresh token for obtaining new access tokens
        expiresIn:
          type: integer
          description: Token expiration time in seconds
          example: 3600
        user:
          $ref: '#/components/schemas/User'

    User:
      type: object
      required:
        - id
        - email
        - name
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        email:
          type: string
          format: email
          example: "user@example.com"
        name:
          type: string
          example: "John Doe"
        role:
          type: string
          enum: [user, admin, partner]
          example: user
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-10-31T00:00:00Z"

    Pagination:
      type: object
      required:
        - page
        - limit
        - total
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 20
        total:
          type: integer
          example: 100
        totalPages:
          type: integer
          example: 5

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: "invalid_credentials"
        message:
          type: string
          example: "The provided credentials are invalid"
        details:
          type: object
          additionalProperties: true
        timestamp:
          type: string
          format: date-time
          example: "2025-10-31T00:00:00Z"

security:
  - ApiKeyAuth: []
  - BearerAuth: []
